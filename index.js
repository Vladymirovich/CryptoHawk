require('dotenv').config({ path: './config/.env' });
const axios = require('axios');
const express = require('express');
const logger = require('./logs/apiLogger'); // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–≥–µ—Ä
const app = express();
const PORT = process.env.PORT || 3000;

console.log("Starting CryptoHawk project...");

// –ó–∞–ø—É—Å–∫–∞–µ–º –∞–¥–º–∏–Ω –±–æ—Ç–∞ –ø–µ—Ä–≤—ã–º
const adminBot = require('./bots/adminBot');

// –§—É–Ω–∫—Ü–∏—è –æ–∂–∏–¥–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ –∞–¥–º–∏–Ω –±–æ—Ç–∞
async function startBots() {
  try {
    logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Admin Bot...");
    await adminBot.launch();
    logger.info("‚úÖ Admin Bot –∑–∞–ø—É—â–µ–Ω.");

    // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ adminBot ‚Äì –∑–∞–≥—Ä—É–∂–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –±–æ—Ç—ã
    const marketStatsBot = require('./bots/marketStatsBot');
    const cexBot = require('./bots/cexBot');

    // –ó–∞–ø—É—Å–∫ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –±–æ—Ç–æ–≤ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏
    await Promise.all([
      (async () => {
        logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º MarketStats Bot...");
        await marketStatsBot.launch();
        logger.info("‚úÖ MarketStats Bot –∑–∞–ø—É—â–µ–Ω.");
      })(),
      (async () => {
        logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º CEX Bot...");
        await cexBot.launch();
        logger.info("‚úÖ CEX Bot –∑–∞–ø—É—â–µ–Ω.");
      })()
    ]);

  } catch (error) {
    logger.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–æ–≤: ${error.message}`);
  }
}

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
app.get('/', (req, res) => res.send('‚úÖ CryptoHawk bots are running.'));

// –ó–∞–ø—É—Å–∫–∞–µ–º HTTP-—Å–µ—Ä–≤–µ—Ä
app.listen(PORT, () => logger.info(`‚úÖ Server running on port ${PORT}`));

// –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
startBots();
