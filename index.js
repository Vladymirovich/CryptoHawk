require('dotenv').config({ path: './config/.env' });
const logger = require('./logs/apiLogger');
const express = require('express');
const app = express();
const PORT = process.env.PORT || 3000;

console.log("Starting CryptoHawk project...");

// üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∞–¥–º–∏–Ω-–±–æ—Ç –ø–µ—Ä–≤—ã–º
const adminBot = require('./bots/adminBot');

async function startBots() {
  try {
    logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Admin Bot...");
    await adminBot.launch();
    logger.info("‚úÖ Admin Bot –∑–∞–ø—É—â–µ–Ω.");

    // –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –±–æ—Ç—ã –¢–û–õ–¨–ö–û –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ –∞–¥–º–∏–Ω-–±–æ—Ç–∞
    const marketStatsBot = require('./bots/marketStatsBot');
    const cexBot = require('./bots/cexBot');

    logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º MarketStats Bot...");
    await marketStatsBot.launch();
    logger.info("‚úÖ MarketStats Bot –∑–∞–ø—É—â–µ–Ω.");

    logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º CEX Bot...");
    await cexBot.launch();
    logger.info("‚úÖ CEX Bot –∑–∞–ø—É—â–µ–Ω.");

  } catch (error) {
    logger.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–æ–≤: ${error.message}`);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –∏ –±–æ—Ç–æ–≤
startBots();

app.get('/', (req, res) => res.send('CryptoHawk bots are running.'));
app.listen(PORT, () => logger.info(`‚úÖ Server running on port ${PORT}`));

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (SIGINT, SIGTERM)
process.once('SIGINT', () => {
  logger.warn('‚ö†Ô∏è –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã (SIGINT)...');
  process.exit(0);
});

process.once('SIGTERM', () => {
  logger.warn('‚ö†Ô∏è –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã (SIGTERM)...');
  process.exit(0);
});
