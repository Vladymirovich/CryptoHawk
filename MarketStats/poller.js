// MarketStats/poller.js
const { getMarketOverviewData } = require('./MarketOverviewEvent');
const logger = require('../logs/apiLogger');

// –§–ª–∞–≥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏—è Market Overview
let isMarketOverviewActive = false;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
function setMarketOverviewActive(active) {
  isMarketOverviewActive = active;
  logger.info(`Market Overview active: ${active}`);
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª–ª–∏–Ω–≥–∞
async function pollMarketOverview() {
  if (!isMarketOverviewActive) {
    logger.info("Market Overview is not active. Skipping poll cycle.");
    return;
  }
  try {
    const eventsData = await getMarketOverviewData();
    let output = "üìä **Market Overview Update**\n\n";
    for (const key in eventsData) {
      const event = eventsData[key];
      output += `‚Ä¢ **${event.name}:** ${event.value}\n`;
      output += `Chart: ${event.chartUrl}\n\n`;
    }
    // –ó–¥–µ—Å—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ –±–æ—Ç–∞ MarketStats.
    // –ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é sendMarketOverviewNotification(output) –∏–∑ –¥–∞–Ω–Ω–æ–≥–æ –º–æ–¥—É–ª—è –∏ –≤—ã–∑—ã–≤–∞—Ç—å –µ—ë –≤ –±–æ—Ç–µ.
    logger.info("Market Overview Update:\n" + output);
  } catch (err) {
    logger.error("Error in Market Overview poller: " + err.message);
  }
}

let pollerInterval = null;
function startPoller(intervalMs) {
  if (pollerInterval) clearInterval(pollerInterval);
  pollerInterval = setInterval(pollMarketOverview, intervalMs);
  logger.info(`Market Overview poller started with interval ${intervalMs} ms.`);
}

function stopPoller() {
  if (pollerInterval) {
    clearInterval(pollerInterval);
    pollerInterval = null;
    logger.info("Market Overview poller stopped.");
  }
}

module.exports = {
  setMarketOverviewActive,
  startPoller,
  stopPoller
};
