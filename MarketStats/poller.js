// MarketStats/poller.js
const { getMarketOverviewData } = require('./MarketOverviewEvent');
const logger = require('../logs/apiLogger');

// –§–ª–∞–≥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏—è Market Overview (—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∏–∑ –∞–¥–º–∏–Ω‚Äë–±–æ—Ç–∞)
let isMarketOverviewActive = false;

// –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ–ª–ª–µ—Ä–∞
let pollerInterval = null;

// Callback-—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–∑–∞–¥–∞–µ—Ç—Å—è –∏–∑ –±–æ—Ç–∞ MarketStats)
let notificationCallback = null;

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏—è
function setMarketOverviewActive(active) {
  isMarketOverviewActive = active;
  logger.info(`Market Overview active: ${active}`);
}

// –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–¥–∞—Ç—å callback –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function setNotificationCallback(callback) {
  notificationCallback = callback;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª–ª–∏–Ω–≥–∞: –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ –∞–∫—Ç–∏–≤–Ω–æ
async function pollMarketOverview() {
  if (!isMarketOverviewActive) {
    logger.info("Market Overview is not active. Skipping poll cycle.");
    return;
  }
  try {
    const eventsData = await getMarketOverviewData();
    let output = "üìä **Market Overview Update**\n\n";
    for (const key in eventsData) {
      const event = eventsData[key];
      output += `‚Ä¢ **${event.name}:** ${event.value}\n`;
      output += `Chart: ${event.chartUrl}\n\n`;
    }
    if (notificationCallback) {
      await notificationCallback(output);
    } else {
      logger.warn("Notification callback not set.");
    }
  } catch (err) {
    logger.error("Error in Market Overview poller: " + err.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–ª–µ—Ä —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º (–≤ –º—Å)
function startPoller(intervalMs) {
  if (pollerInterval) clearInterval(pollerInterval);
  pollerInterval = setInterval(pollMarketOverview, intervalMs);
  logger.info(`Market Overview poller started with interval ${intervalMs} ms.`);
}

// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–æ–ª–ª–µ—Ä
function stopPoller() {
  if (pollerInterval) {
    clearInterval(pollerInterval);
    pollerInterval = null;
    logger.info("Market Overview poller stopped.");
  }
}

module.exports = {
  setMarketOverviewActive,
  startPoller,
  stopPoller,
  setNotificationCallback
};
