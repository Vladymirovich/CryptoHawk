// bots/marketStatsBot.js

require('dotenv').config({ path: __dirname + '/../config/.env' });
const { Telegraf, Markup } = require('telegraf');
const logger = require('../logs/apiLogger');
const { startPoller, setNotificationCallback } = require('../MarketStats/poller');

if (!process.env.TELEGRAM_MARKET_BOT_TOKEN) {
  console.error("Error: TELEGRAM_MARKET_BOT_TOKEN is not defined in .env");
  process.exit(1);
}

const bot = new Telegraf(process.env.TELEGRAM_MARKET_BOT_TOKEN);

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è chat_id, –∫—É–¥–∞ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
let notificationChatId = null;

// ====================
// –û–ë–†–ê–ë–û–¢–ö–ê –ö–û–ú–ê–ù–î–´ /start
// ====================
bot.start(async (ctx) => {
  try {
    // –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π /start, —á—Ç–æ–±—ã –æ–Ω–æ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–ª–æ—Å—å –≤ —á–∞—Ç–µ
    if (ctx.message && ctx.message.message_id) {
      await ctx.deleteMessage(ctx.message.message_id);
    }
  } catch (err) {
    logger.error("Error deleting /start message: " + err.message);
  }
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º chat_id –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  notificationChatId = ctx.chat.id;

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –≤–∏–¥–µ –∫—Ä–∞—Å–∏–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å inline‚Äë–∫–Ω–æ–ø–∫–æ–π "üü¶ START"
  await ctx.reply(
    "üü¶ <b>MarketStats Bot</b>\n\nPress the <b>üü¶ START</b> button below to activate notifications.\n\n" +
    "Receive important and up-to-date market information to help you understand market dynamics and make informed trading decisions.",
    {
      parse_mode: "HTML",
      reply_markup: Markup.inlineKeyboard([
        [Markup.button.callback("üü¶ START", "start_marketstats")]
      ])
    }
  );
});

// ====================
// –û–ë–†–ê–ë–û–¢–ö–ê –ö–ù–û–ü–ö–ò "üü¶ START"
// ====================
bot.action("start_marketstats", async (ctx) => {
  try {
    await ctx.answerCbQuery();
  } catch (err) {
    logger.error("Error answering callback query: " + err.message);
  }
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ ‚Äì –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ª–æ–≥–∏–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–∫–ª—é—á–∞—Ç—å –ø–æ–ª–ª–µ—Ä)
  await ctx.reply("MarketStats notifications activated. (Poller remains off until manually started if not already active.)");
});

// ====================
// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º callback –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏–∑ –ø–æ–ª–ª–µ—Ä–∞
// ====================
setNotificationCallback(async (messageText) => {
  if (notificationChatId) {
    try {
      await bot.telegram.sendMessage(notificationChatId, messageText, { parse_mode: "Markdown" });
    } catch (err) {
      logger.error("Error sending market overview notification: " + err.message);
    }
  } else {
    logger.warn("No notification chat id set. Notification not sent.");
  }
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–ª–µ—Ä —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä, 5 –º–∏–Ω—É—Ç (300000 –º—Å)
// (–ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –≤ –∞–¥–º–∏–Ω-–±–æ—Ç–µ, –ø–æ–ª–ª–µ—Ä –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ; –∏–Ω–∞—á–µ ‚Äì –≤—ã–≤–æ–¥–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏)
startPoller(300000);

bot.launch()
  .then(() => logger.info("MarketStats Bot launched."))
  .catch((err) => logger.error(`MarketStats Bot launch error: ${err.message}`));

process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));
