// ====================
// bots/marketStatsBot.js
// ====================

require('dotenv').config({ path: __dirname + '/../config/.env' });
const { Telegraf } = require('telegraf');
const logger = require('../logs/apiLogger');
const { startPoller, setNotificationCallback } = require('../MarketStats/poller');

if (!process.env.TELEGRAM_MARKET_BOT_TOKEN) {
  console.error("Error: TELEGRAM_MARKET_BOT_TOKEN is not defined in .env");
  process.exit(1);
}

const bot = new Telegraf(process.env.TELEGRAM_MARKET_BOT_TOKEN);

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è chat_id, –∫—É–¥–∞ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
let notificationChatId = null;

// ====================
// –û–ë–†–ê–ë–û–¢–ö–ê –ö–û–ú–ê–ù–î–´ /start
// ====================
bot.start(async (ctx) => {
  try {
    // –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π /start, —á—Ç–æ–±—ã –æ–Ω–æ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–ª–æ—Å—å –≤ —á–∞—Ç–µ
    if (ctx.message && ctx.message.message_id) {
      await ctx.deleteMessage(ctx.message.message_id);
    }
  } catch (err) {
    logger.error("Error deleting /start message: " + err.message);
  }
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º chat_id –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  notificationChatId = ctx.chat.id;

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–±–µ–∑ –∫–Ω–æ–ø–∫–∏ "START")
  await ctx.reply(
    "üü¶ <b>MarketStats Bot</b>\n\nReceive real‚Äëtime Market Overview notifications.\n\n" +
    "The bot is now activated and ready to receive notifications.",
    { parse_mode: "HTML" }
  );
});

// ====================
// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º callback –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏–∑ –ø–æ–ª–ª–µ—Ä–∞
// ====================
setNotificationCallback(async (messageText) => {
  if (notificationChatId) {
    try {
      await bot.telegram.sendMessage(notificationChatId, messageText, { parse_mode: "Markdown" });
    } catch (err) {
      logger.error("Error sending market overview notification: " + err.message);
    }
  } else {
    logger.warn("No notification chat id set. Notification not sent.");
  }
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–ª–µ—Ä —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º (100000 –º—Å)
// (–ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –≤ –∞–¥–º–∏–Ω‚Äë–±–æ—Ç–µ, –ø–æ–ª–ª–µ—Ä –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)
startPoller(100000);

bot.launch()
  .then(() => logger.info("MarketStats Bot launched."))
  .catch((err) => logger.error(`MarketStats Bot launch error: ${err.message}`));

process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));

module.exports = bot;
